name: Deployment

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io

jobs:
  # Build client and server images
  build-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        component: ['client', 'server']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.component }}
          tags: type=sha,format=long

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: docker/Dockerfile-${{ matrix.component }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: ['build-image']

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          remote_host: ${{ secrets.DEPLOY_SSH_HOST }}
          remote_user: ${{ secrets.DEPLOY_SSH_USER }}
          remote_private_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          stack_file: "docker/bus-tracker-stack.yaml"
          stack_name: "bus-tracker"
