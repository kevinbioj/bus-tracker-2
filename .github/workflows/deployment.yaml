name: Deployment

on:
  push:
    branches: ['main']
    paths:
      - apps/client/**/*
      - apps/server/**/*
      - docker/**/*
      - libraries/**/*
      - package.json
      - pnpm-lock.yaml
      - pnpm-workspace.yaml
      - .github/workflows/deployment.yaml

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        component: ['client', 'server']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Copy environment files
        run: |
          echo "${{ secrets.SERVER_ENV }}" > apps/server/.env

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.component }}
          tags: type=sha,format=long
    
      - name: Generate build information
        id: build-info
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_time=$(date +'%Y-%m-%dT%H:%M:%S%:z')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_HASH=${{ steps.build-info.outputs.short_sha }}
            BUILD_TIMESTAMP=${{ steps.build-info.outputs.build_time }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          context: .
          file: docker/Dockerfile-${{ matrix.component }}
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: ['build']

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy stack to the server
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          remote_host: ${{ secrets.DEPLOY_SSH_HOST }}
          remote_user: ${{ secrets.DEPLOY_SSH_USER }}
          remote_private_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          stack_file: "docker/bus-tracker-stack.yaml"
          stack_name: "bus-tracker"
